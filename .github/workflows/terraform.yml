name: 'Terraform'

on:
  push:
    branches:
    - master
    paths:
    - lab3-var-module/app2/**
  pull_request:

permissions:
  contents: read

jobs:
  checkout:
    name: checkout
    runs-on: gabriel-runner

    steps:
    - name: checkout
      user: actions/checkout@v3
      with:
        fetch-depth: 0

  build:
    name: BUILD IMG E PUSH PARA O DOCKER HUB
    runs-on: gabriel-runner
    needs: [checkout]
    env:
      APP: img-php

    steps:
    - name: LOGIN NO DOCKER HUB
      uses: docker/login-actions@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: PUSH IMAGE
      run: docker build -t gbrmelo/$APP:${GITHUB::7}            

  terraform-init:
    name: 'Terraform'
    runs-on: gabriel-runner
    needs: [build]
    env: 
      ENVIRONMENT: lab
      APP: img-php

    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: lab3-var-module/app2/

     Checks that all Terraform configuration files adhere to a canonical format
     - name: Terraform Format
      run: terraform fmt -check
      working-directory: lab3-var-module/app2/

    - name: Terraform workspace new - LAB
      if: github.ref == 'refs/heads/master'
      run: terraform workspace new lab
      working-directory: lab3-var-module/app2/
      continue-on-error: true

    - name: Terraform workspace select - LAB
      if: github.ref == 'refs/heads/master'
      run: terraform workspace select lab
      working-directory: lab3-var-module/app2/

     # Generates an execution plan for Terraform
    - name: Terraform Plan - LAB
       if: github.ref == 'refs/heads/master'
       run: terraform plan -var-file=app2.tfvars -var="img_repo=$APP" -var="img_tag=${GITHUB_SHA::7}" -input=false
       working-directory: lab3-var-module/app2/

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply - LAB
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform  destroy -var-file=app2.tfvars -var="img_repo=$APP" -var="img_tag=${GITHUB_SHA::7}" --auto-approve -input=false
      working-directory: lab3-var-module/app2/